{"version":3,"file":"static/js/662.bfee93a5.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Container = styled.section`\nmargin: auto;\npadding: 30px 0;\nbackground: radial-gradient(circle, #FFD700, #FF6B6B, #3E8AC5);\nborder: 2px solid red; \nborder-radius: 15px; \nbox-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2); \n`;\n\nexport const MainTitle = styled.h2`\nfont-size: 37px;\ntext-align: center;\nposition: relative;\n`;\n","import { Container, MainTitle } from './Section.styled';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Container>\n      {title && <MainTitle>{title}</MainTitle>}\n      {children}\n    </Container>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\n// Icon styling\nexport const Icon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n  fill: black;\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\n// Form styling\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 10px;\n`;\n\n// Label styling\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\n// Input styling\nexport const Input = styled.input`\n  width: 250px;\n  padding: 15px 30px; /* Adjusted padding for better alignment */\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n  font-size: 16px; /* Add consistent font size */\n  \n  &::placeholder {  /* Corrected placeholder syntax */\n    color: #757575;\n  }\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    border: 1px solid #000000;\n  }\n`;\n\n// Button styling\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  gap: 14px;  /* Ensuring space between icon and text */\n  width: fit-content;\n  padding: 10px 20px;  /* Adjusted padding for better visual balance */\n  margin-top: 15px;\n  margin-left: 15px;\n  margin-right: 20px;\n  background-color: whitesmoke;\n  border: 1px solid black;\n  border-radius: 10px;\n  cursor: pointer;\n\n  /* Combined all transitions into one */\n  transition: \n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: black;\n    border: 1px solid #000000;\n\n    /* Change icon color when the button is hovered or focused */\n    > svg {\n      fill: white;\n    }\n  }\n`;\n\n\n// import styled from '@emotion/styled';\n// import { FaUserPlus } from 'react-icons/fa';\n\n// export const Icon = styled(FaUserPlus)`\n//   width: 20px;\n//   height: 20px;\n//   fill: black;\n// `;\n\n// export const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   padding: 10px;\n// `;\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   margin-top: 12px;\n//   font-size: 16px;\n//   font-weight: 500;\n// `;\n\n// export const Input = styled.input`\n// width: 250px;\n// padding: 25px 30px;\n// color: #000000;\n// background: #efefef;\n// border-radius: 18px;\n// border: 1px solid #efefef;\n// :placeholder {\n//   color: #757575;\n// }\n// transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// :hover,\n// :focus {\n//   border: 1px solid #000000;\n// }\n// `;\n\n// export const Button = styled.button`\n// font-weight: 600;\n// font-size: 20px;\n// display: flex;\n// align-items: center;\n// gap: 14px;\n// width: fit-content;\n// padding: 10px;\n// margin-top: 15px;\n// margin-left: 15px;\n// margin-right: 20px;\n// background-color: whitesmoke;\n// border: 1px solid black;\n// border-radius: 10px;\n// cursor: pointer;\n// transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// :hover,\n// :focus {\n//   color: white;\n//   background-color: black;\n//   border: 1px solid #000000;\n//   > svg {\n//     fill: white;\n//   }\n// }\n// `;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectContactsList } from '../../redux/constacts/selectors';\nimport { addContact } from '../../redux/constacts/operations';\nimport { Form, Input, Label, Button, Icon } from './ContactForm.styled';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    \n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in your contacts.`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in your contacts.`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name}  has been successfully added`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Oops something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <Icon />\n        New contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n\n\n\n\n","// import styled from '@emotion/styled';\n\n// // Label component with improved responsiveness\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   font-size: 16px;\n//   font-weight: 500;\n\n//   @media (max-width: 768px) {\n//     font-size: 14px;  // Smaller font size for tablets\n//   }\n\n//   @media (max-width: 480px) {\n//     font-size: 12px;  // Even smaller font size for mobile screens\n//   }\n// `;\n\n// // Input component with improved responsiveness\n// export const Input = styled.input`\n//   width: 100%;  // Make the input take full width of its parent container\n//   max-width: 350px;  // Limit maximum width on large screens\n//   padding: 15px 20px;  // Reduced padding for better usability on smaller screens\n//   color: #000000;\n//   background: #efefef;\n//   border-radius: 18px;\n//   border: 1px solid #efefef;\n//   transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   ::placeholder {\n//     color: #757575;\n//   }\n\n//   &:hover,\n//   &:focus {\n//     border: 1px solid #000000;\n//   }\n\n//   @media (max-width: 768px) {\n//     max-width: 300px;  // Adjust maximum width on tablet\n//     padding: 12px 16px;  // Reduce padding for smaller screens\n//   }\n\n//   @media (max-width: 480px) {\n//     max-width: 280px;  // Adjust max width for small screens\n//     padding: 10px 12px;  // Reduce padding further for small screens\n//   }\n// `;\n\n\nimport styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\nwidth: 250px;\npadding: 25px 30px;\ncolor: #000000;\nbackground: #efefef;\nborder-radius: 18px;\nborder: 1px solid #efefef;\n:placeholder {\n  \n  color: #757575;\n}\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  border: 1px solid #000000;\n}\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { setContactsFilter } from '../../redux/constacts/filterSlice';\nimport { selectContactsFilter } from '../../redux/constacts/selectors';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const onChangeFilter = ({ currentTarget: { value } }) => {\n   dispatch(setContactsFilter(value));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter your contact name\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </Label>\n  );\n};\n\n\n\n\n","import styled from '@emotion/styled';\nimport { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUser)`\n  padding: 8px;\n  width: 20px;\n  height: 20px;\n  fill: black;\n  border-radius: 50%;\n  background-color: whitesmoke;\n  &:hover,\n  &:focus {\n    background-color: black;\n    fill: red;\n    \n  }\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 8px;\n  width: 20px;\n  height: 20px;\n  fill: black;\n  border-radius: 50%;\n  background-color: whitesmoke;\n  &:hover,\n  &:focus {\n    background-color: black;\n    fill: red;\n    \n  }\n`;\n\nexport const UserDeletedIcon = styled(FaUserMinus)`\n  width: 50px;\n  height: 20px;\n  fill: black;\n`;\n\nexport const ContactItem = styled.li`\n  max-width: 400px;\n  display: flex;\n  flex-direction: center;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 15px;\n  padding: 20px 20px;\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n  // box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  margin: 0;\n `;\n\nexport const Button = styled.button`\nfont-weight: 600;\nfont-size: 20px;\ndisplay: flex;\nalign-items: center;\ngap: 5px;\nwidth: fit-content;\npadding: 10px;\nbackground-color: whitesmoke;\nborder: 1px solid black;\nborder-radius: 10px;\ncursor: pointer;\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n:hover,\n:focus {\n  color: white;\n  background-color: black;\n  border: 1px solid #000000;\n  > svg {\n    fill: white;\n  }\n}\n`;\n\n// import styled from '@emotion/styled';\n// import { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\n// // User Icon - Standard icon for user\n// export const UserIcon = styled(FaUser)`\n//   padding: 8px;\n//   width: 20px;\n//   height: 20px;\n//   fill: black;\n//   border-radius: 50%;\n//   background-color: whitesmoke;\n  \n//   &:hover,\n//   &:focus {\n//     background-color: black;\n//     fill: red;\n//   }\n// `;\n\n// // Phone Icon - Standard icon for phone\n// export const PhoneIcon = styled(FaPhoneAlt)`\n//   padding: 8px;\n//   width: 20px;\n//   height: 20px;\n//   fill: black;\n//   border-radius: 50%;\n//   background-color: whitesmoke;\n  \n//   &:hover,\n//   &:focus {\n//     background-color: black;\n//     fill: red;\n//   }\n// `;\n\n// // User Deleted Icon - Specific icon for deleted users\n// export const UserDeletedIcon = styled(FaUserMinus)`\n//   width: 50px;\n//   height: 20px;\n//   fill: black;\n// `;\n\n// // Contact Item - Main wrapper for each contact\n// export const ContactItem = styled.li`\n//   max-width: 1168px;\n//   display: flex;\n//   align-items: center;\n//   justify-content: flex-start;\n//   gap: 15px;\n//   padding: 20px;\n//   border-radius: 24px;\n//   border: 1px solid rgba(0, 0, 0, 0.04);\n//   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n//   background-color: whitesmoke;\n\n//   @media (max-width: 768px) {\n//     width: 100%;  // Make it full width on smaller screens\n//     padding: 15px;  // Reduce padding on small screens\n//   }\n\n//   @media (max-width: 480px) {\n//     padding: 10px;  // Even less padding on very small screens\n//   }\n// `;\n\n// // Contact Name - Name display for the contact\n// export const ContactName = styled.p`\n//   display: flex;\n//   align-items: center;\n//   gap: 14px;\n//   margin: 0;\n//   font-weight: 500;\n//   font-size: 18px;\n\n//   @media (max-width: 768px) {\n//     font-size: 16px; // Adjust font size for tablets\n//   }\n\n//   @media (max-width: 480px) {\n//     font-size: 14px;  // Even smaller for mobile screens\n//   }\n// `;\n\n// // Contact Number - Phone number display for the contact\n// export const ContactNumber = styled.p`\n//   display: flex;\n//   align-items: center;\n//   gap: 14px;\n//   margin: 0;\n//   font-size: 18px;\n\n//   @media (max-width: 768px) {\n//     font-size: 16px;  // Adjust font size for tablets\n//   }\n\n//   @media (max-width: 480px) {\n//     font-size: 14px;  // Even smaller for mobile screens\n//   }\n// `;\n\n// // Button - Styled button used for actions like deleting contacts\n// export const Button = styled.button`\n//   font-weight: 600;\n//   font-size: 20px;\n//   display: flex;\n//   align-items: center;\n//   gap: 5px;\n//   width: fit-content;\n//   padding: 10px;\n//   background-color: whitesmoke;\n//   border: 1px solid black;\n//   border-radius: 10px;\n//   cursor: pointer;\n//   transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);  // Consolidated transition\n\n//   &:hover,\n//   &:focus {\n//     color: white;\n//     background-color: black;\n//     border: 1px solid #000;\n//     > svg {\n//       fill: white;  // Change icon color to white on hover\n//     }\n//   }\n\n//   @media (max-width: 768px) {\n//     padding: 8px 15px;  // Adjust padding for tablet\n//     font-size: 18px;  // Adjust font size for tablets\n//   }\n\n//   @media (max-width: 480px) {\n//     padding: 6px 12px;  // Adjust padding for mobile\n//     font-size: 16px;  // Adjust font size for mobile screens\n//   }\n// `;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/constacts/operations';\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserIcon,\n  UserDeletedIcon,\n  PhoneIcon,\n} from './ContactListItem.styled';\nimport { Notify } from 'notiflix';\nimport PropTypes from 'prop-types';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} has been deleted successfully`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Oops something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        <UserIcon />\n        {name}\n      </ContactName>\n      <ContactNumber>\n        <PhoneIcon />\n        {number}\n      </ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled, { keyframes } from 'styled-components';\n\nexport const ListContact = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 0 10px;\n  width: 100%; /* Ensure it takes the full width */\n\n  @media (max-width: 768px) {\n    margin-top: 15px; /* Reduce margin on smaller screens */\n    padding: 0 20px; /* Add more padding for mobile */\n  }\n\n  @media (max-width: 480px) {\n    padding: 0 15px; /* Tighter padding for very small screens */\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap; /* Allow items to wrap into rows */\n    gap: 20px; /* Add space between items */\n  }\n`;\n\nexport const ContactItems = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  border-bottom: 1px solid #eee;\n\n  @media (max-width: 768px) {\n    flex-direction: column; /* Stack the contact details on top of each other */\n    align-items: flex-start; /* Align left */\n    padding: 10px 0; /* More vertical padding */\n  }\n\n  @media (max-width: 480px) {\n    padding: 5px 0; /* Less padding on very small screens */\n  }\n`;\n\nexport const Text = styled.p`\n  display: inline-block;\n  min-width: 300px;\n\n  @media (max-width: 768px) {\n    min-width: 250px; /* Adjust min-width for smaller screens */\n  }\n\n  @media (max-width: 480px) {\n    min-width: 200px; /* Reduce further for very small screens */\n    font-size: 14px; /* Smaller font size on mobile */\n  }\n`;\n\nexport const ContactData = styled.p`\n  font-size: 25px;\n  margin-right: 10px;\n\n  @media (max-width: 768px) {\n    font-size: 20px; /* Smaller font size for tablets */\n  }\n\n  @media (max-width: 480px) {\n    font-size: 18px; /* Even smaller font size for small screens */\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 5px 20px;\n  margin-left: 20px;\n  font-size: 17px;\n  border-radius: 6px;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  transition: background-color 0.3s;\n\n  @media (max-width: 768px) {\n    padding: 5px 15px; /* Adjust padding for tablet */\n    font-size: 15px; /* Slightly smaller font size */\n  }\n\n  @media (max-width: 480px) {\n    padding: 5px 12px; /* Tighter padding on mobile */\n    font-size: 14px; /* Even smaller font size for mobile */\n    margin-left: 10px; /* Reduced margin for small screens */\n  }\n\n  &:hover {\n    background-color: #007bff;\n    color: #fff;\n  }\n`;\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled.div`\n  border: 4px solid rgba(0, 0, 0, 0.1);\n  border-top-color: #333;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  margin-bottom: 20px;\n  margin-left: 70px;\n  animation: ${spin} 1s ease-in-out infinite;\n\n  @media (max-width: 768px) {\n    width: 20px;\n    height: 20px;\n    margin-left: 50px; /* Adjust for tablet */\n  }\n\n  @media (max-width: 480px) {\n    width: 16px;\n    height: 16px;\n    margin-left: 30px; /* Adjust for mobile */\n  }\n`;\n\n\n// import styled, {keyframes} from 'styled-components'\n\n// export const ListContact = styled.ul`\n//   margin-top: 30px;\n//   display: flex;\n//   flex-direction: column;\n//   margin-left: auto;\n//   margin-right: auto;\n//   // gap: 20px;\n  \n// `;\n\n// export const ContactItems = styled.li`\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   // margin-bottom: 10px;\n \n// `;\n// export const Text = styled.p`\n//   display: inline-block;\n//   min-width: 300px;\n// `;\n\n// export const ContactData = styled.p`\n//   font-size: 25px;\n//   margin-right: 10px;\n// `;\n\n\n// export const Button = styled.button`\n//   padding: 5px 20px;\n//   margin-left: 20px;  \n//   font-size: 17px;\n//   border-radius: 6px;\n//   border: 1px solid #ccc;\n//   cursor: pointer;\n//   transition: background-color 0.3s;\n\n//   &:hover {\n//     background-color: #007bff;\n//     color: #fff;\n//   }\n  \n// `;\n\n// const spin = keyframes`\n//   0% {\n//     transform: rotate(0deg);\n//   }\n//   100% {\n//     transform: rotate(360deg);\n//   }\n// `;\n\n// export const Spinner = styled.div`\n//   border: 4px solid rgba(0, 0, 0, 0.1);\n//   border-top-color: #333;\n//   border-radius: 50%;\n//   width: 24px;\n//   height: 24px;\n//   margin-bottom: 20px;\n//   margin-left: 70px;\n\n//   animation: ${spin} 1s ease-in-out infinite;\n// `;","import { useSelector } from 'react-redux';\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from '../../redux/constacts/selectors';\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\nimport { ListContact } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <>\n      {visibleContacts.length > 0 && (\n        <ListContact>\n          {visibleContacts.map(({ name, number, id }) => (\n            <ContactsListItem key={id} id={id} name={name} number={number} />\n          ))}\n        </ListContact>\n      )}\n    </>\n  );\n};","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 1.25rem;  /* Using relative units */\n  height: 1.25rem; /* More flexible for scaling */\n  fill: black;\n`;\n\nexport const PageContainer = styled.div`\n  padding: 40px;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  \n  /* Optional: Background gradient */\n  // background: radial-gradient(circle, #FFD700, #FF6B6B, #3E8AC5);\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n  \n  /* Responsive Design */\n  @media (max-width: 768px) {\n    margin-bottom: 16px;  /* Adjust margin on smaller screens */\n  }\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Rubik Wet Paint', cursive;\n  font-weight: 700;\n  font-size: 2.5rem;  /* More flexible font size */\n  margin-left: 20px;\n  margin-right: 20px;\n  \n  @media (max-width: 768px) {\n    font-size: 2rem;  /* Adjust font size for mobile */\n    margin-left: 10px;  /* Adjust margin for mobile */\n    margin-right: 10px;\n  }\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 1rem;  /* Adjusted for better readability */\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 20px 25px;  /* Adjusted padding for better usability */\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n  \n  &::placeholder {\n    color: #757575;\n  }\n\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 1px solid #000000;\n  }\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    width: 200px;  /* Adjust width for smaller screens */\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 1rem;  /* Adjust font size for better flexibility */\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  max-width: fit-content;\n  padding: 10px 25px;  /* Adjust padding for mobile devices */\n  margin-left: 15px;\n  margin-right: 20px;\n  background-color: whitesmoke;\n  border: 1px solid black;\n  border-radius: 10px;\n  cursor: pointer;\n  \n  /* Combined transition for better readability */\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: black;\n    border: 1px solid #000000;\n    > svg {\n      fill: white;\n    }\n  }\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    font-size: 0.9rem;  /* Adjust font size for mobile */\n    padding: 8px 20px;  /* Adjust padding for mobile */\n  }\n`;\n\n\n// import styled from '@emotion/styled';\n// import { FaUserPlus } from 'react-icons/fa';\n\n// export const AddUserIcon = styled(FaUserPlus)`\n//   width: 20px;\n//   height: 20px;\n  \n//   fill: black;\n// `;\n// export const PageContainer = styled.div`\n//   padding: 40px 40px;\n//   height: 100vh;\n\n \n//   // background: radial-gradient(circle, #FFD700, #FF6B6B, #3E8AC5);\n// `;\n// export const Wrapper = styled.div`\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 28px;\n// `;\n// export const Title = styled.h2`\n// font-family: 'Rubik Wet Paint', cursive; \n//   font-weight: 700;\n//   font-size: 50px;\n  \n//   margin-left: 20px;\n// `;\n\n// export const FilterWrapper = styled.div`\n//   display: flex;\n//   margin-left: auto;\n// `;\n\n// export const Form = styled.form``;\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 8px;\n//   margin-top: 12px;\n//   font-size: 16px;\n//   font-weight: 500;\n// `;\n\n// export const Input = styled.input`\n// width: 250px;\n// padding: 25px 30px;\n// color: #000000;\n// background: #efefef;\n// border-radius: 18px;\n// border: 1px solid #efefef;\n// :placeholder {\n//   color: #757575;\n// }\n// transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// :hover,\n// :focus {\n//   border: 1px solid #000000;\n// }\n// `;\n\n// export const Button = styled.button`\n//   font-weight: 600;\n//   font-size: 20px;\n//   display: flex;\n//   align-items: center;\n//   gap: 14px;\n//   max-width: fit-content;\n//   padding: 10px;\n//   margin-left: 15px;\n//   margin-right: 20px;\n//   background-color: whitesmoke;\n//   border: 1px solid black;\n//   border-radius: 10px;\n//   cursor: pointer;\n//   transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   :hover,\n//   :focus {\n//     color: white;\n//     background-color: black;\n//     border: 1px solid #000000;\n//     > svg {\n//       fill: white;\n//     }\n//   }\n// `;","import styled from '@emotion/styled';\nimport { FaWindowClose } from 'react-icons/fa';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  // background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  background: linear-gradient(45deg, #ADD8E6, #00008B);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\nposition: relative;\n  border-radius: 15px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 50px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 2px;\n  padding-right: 2px;\n  background-color: red;\n`;\n\nexport const CloseIcon = styled(FaWindowClose)`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 20px;\n  color: black;\n  cursor: pointer;\n  transition: color 0.3s ease-in-out;\n\n  &:hover {\n    color: red;\n  }\n`;","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { ModalContent, Overlay, CloseIcon } from './Modal.styled';\nimport { FaWindowClose } from 'react-icons/fa';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    onCloseModal();\n  };\n\n  return (\n    isModalOpen && (\n      <Overlay onClick={handleBackdropClick}>\n        <ModalContent>\n          {children}\n          <CloseIcon onClick={handleCloseModal}>\n            <FaWindowClose />\n          </CloseIcon>\n        </ModalContent>\n      </Overlay>\n    )\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n\nexport default Modal;","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from '../../redux/constacts/operations';\nimport { selectError, selectIsLoading } from '../../redux/constacts/selectors';\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  Wrapper,\n  PageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.styled';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <PageContainer>\n      <Section>\n        <Wrapper>\n          <Title>Your contacts:</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n               Add New Contact\n            </Button>\n          </FilterWrapper>\n        </Wrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default Contacts;\n\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","Container","styled","_templateObject","_taggedTemplateLiteral","MainTitle","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","Icon","FaUserPlus","Form","Label","_templateObject3","Input","_templateObject4","Button","_templateObject5","ContactForm","onCloseModal","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","form","target","formName","elements","name","value","formNumber","number","some","_ref2","alert","concat","_ref3","addContact","toString","unwrap","then","originalPromiseResult","Notify","catch","reset","autoComplete","type","pattern","required","placeholder","Filter","filter","onChange","currentTarget","setContactsFilter","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","UserDeletedIcon","FaUserMinus","ContactItem","ContactName","ContactNumber","_templateObject6","_templateObject7","ContactsListItem","id","onClick","userId","deleteContact","ListContact","spin","keyframes","ContactList","visibleContacts","contact","toLowerCase","includes","_Fragment","length","map","AddUserIcon","PageContainer","Wrapper","Title","FilterWrapper","_templateObject8","_templateObject9","Overlay","ModalContent","CloseIcon","FaWindowClose","Modal","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev"],"sourceRoot":""}