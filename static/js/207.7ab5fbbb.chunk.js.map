{"version":3,"file":"static/js/207.7ab5fbbb.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  border: 1px solid #efefef;\n  margin: 0 auto;\n  margin-top: 50px;\n  background: linear-gradient(45deg, #FF6B6B, #3E8AC5);\n  padding: 20px;\n  max-width: 500px;\n  width: 100%;\n  box-sizing: border-box;\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    max-width: 90%;\n    margin-top: 30px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 12px;\n  font-size: 1.2rem;\n  font-weight: 500;\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 15px 20px;\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n  box-sizing: border-box;\n  font-size: 1rem;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ::placeholder {\n    color: #757575;\n  }\n\n  :hover,\n  :focus {\n    border: 1px solid #000000;\n  }\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 1.2rem;\n  margin-top: 20px;\n  margin-bottom: 5px;\n  padding: 15px 40px;\n  border: 1px solid black;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: black;\n    border: 1px solid #000000;\n  }\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 1rem;\n    padding: 12px 30px;\n  }\n`;\n\nexport const Text = styled.h2`\n  color: black;\n  margin-top: 50px;\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    font-size: 1.5rem;\n    margin-top: 30px;\n  }\n`;\n\nexport const LoggedLink = styled(NavLink)`\n  margin: 10px 0;\n  color: black;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: white;\n  }\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\n\n\n\n\n\n// import styled from '@emotion/styled';\n// import { NavLink } from 'react-router-dom';\n\n// export const Form = styled.form`\n//   display: flex;\n//   justify-content: center;\n//   max-width: 500px;\n//   flex-direction: column;\n//   align-items: center;\n//   border: 1px solid #efefef;\n//   margin:0 auto;\n//   margin-top: 50px;\n//   // background: linear-gradient(45deg, #ADD8E6, #00008B);\n//   background: linear-gradient(45deg, #FF6B6B, #3E8AC5);\n  \n// `;\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   margin-top: 12px;\n//   font-size: 20px;\n//   font-weight: 500;\n  \n  \n// `;\n\n// export const Input = styled.input`\n//   width: 250px;\n//   padding: 25px 30px;\n//   color: #000000;\n//   background: #efefef;\n//   border-radius: 18px;\n//   border: 1px solid #efefef;\n//   :placeholder {\n//     color: #757575;\n//   }\n// transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   :hover,\n//   :focus {\n//     border: 1px solid #000000;\n//   }\n// `;\n\n// export const Button = styled.button`\n//   font-weight: 600;\n//   font-size: 20px;\n//   margin-top: 20px;\n//   margin-bottom: 5px;\n//   padding: 15px 40px;\n//   // background-color: whitesmoke;\n//   // bckground-color: light-dark(rgb(232, 240, 254), rgba(70, 90, 126, 0.4));\n//   border: 1px solid black;\n//   border-radius: 10px;\n//   cursor: pointer;\n//   // transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   // transition: light-dark(rgb(232, 240, 254), rgba(70, 90, 126, 0.4));\n//   // transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   // transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   :hover,\n//   :focus {\n//     color: white;\n//     background-color: black;\n//     border: 1px solid #000000;\n//   }\n// `;\n\n// export const Text = styled.h2 `\n//   color: black;\n//   margin-top: 50px ;\n\n// `\n\n// export const LoggedLink = styled(NavLink)`\n//   margin: 10px 0;\n//   color: black;\n\n//   cursor: pointer;\n\n//   :hover,\n//   :focus {\n//     color: white;\n//   }\n// `;\n","import { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { Form, Input, Label, Button, Text, LoggedLink } from './RegisterForm.styled';\nimport { Notify } from 'notiflix';\nimport { useState } from 'react';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  // State for loading\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    // Set loading state to true when submitting\n    setIsSubmitting(true);\n\n    try {\n      const result = await dispatch(\n        register({\n          name: form.elements.name.value,\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n\n      // If registration is successful\n      Notify.success(`${result.user.name} welcome!`);\n      form.reset();\n    } catch (error) {\n      // Detailed error message based on server response\n      const errorMessage = error.response?.data?.message || \"Sorry, something went wrong. Please try again.\";\n      Notify.failure(errorMessage);\n    } finally {\n      // Reset loading state after completion\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Text>Create your account.</Text>\n      \n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(?:[ '-][a-zA-Zа-яА-Я]+)*$\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(?:[\\\\s'-][a-zA-Zа-яА-Я]+)*$\"\n          // pattern=\"^[a-zA-Z]+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\"Enter your name\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          // pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\"\n          pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          placeholder=\"Enter your email\"\n          required\n          autocomplete=\"username\"  // Autocomplete for username/email field\n        />\n      </Label>\n\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          // Updated, simplified pattern\n          // pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+]).{8,}$\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[!@#$%^&*()_+]).{8,}$\"\n          title=\"Password must contain at least one letter, one number, one special character (e.g. !@#$%^&*), and be at least 8 characters long.\"\n          placeholder=\"Enter your password\"\n          required\n          autocomplete=\"current-password\"  // Autocomplete for password field\n        />\n      </Label>\n\n      <Button type=\"submit\" disabled={isSubmitting}>\n        {isSubmitting ? 'Registering...' : 'Register'}\n      </Button>\n\n      <LoggedLink to=\"/login\">Already have an account? Log in</LoggedLink>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n\n\n\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","Text","_templateObject5","LoggedLink","NavLink","_templateObject6","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","form","result","_error$response","_error$response$data","errorMessage","_context","prev","next","preventDefault","currentTarget","register","name","elements","value","email","password","unwrap","sent","Notify","concat","user","reset","t0","response","data","message","finish","stop","_x","apply","arguments","_jsxs","onSubmit","autoComplete","children","_jsx","type","pattern","title","placeholder","required","autocomplete","disabled","to","RegisterForm"],"sourceRoot":""}