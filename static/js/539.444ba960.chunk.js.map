{"version":3,"file":"static/js/539.444ba960.chunk.js","mappings":"sQAGaA,EAAOC,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8YAoBlBC,EAAQH,EAAAA,EAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,mPAepBG,EAAQL,EAAAA,EAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kdA2BpBK,EAASP,EAAAA,EAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wmBA4BtBO,GAAaT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAeW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0M,8BChCzC,EAxDkB,WAChB,IAAMU,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGC,OAF5BL,EAAEM,iBAEIL,EAAOD,EAAEO,cAAaJ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAELZ,GACnBe,EAAAA,EAAAA,IAAM,CACJC,MAAOR,EAAKS,SAASD,MAAME,MAC3BC,SAAUX,EAAKS,SAASE,SAASD,SAEnCE,SAAS,KAAD,EALJX,EAAMC,EAAAW,KAOZC,EAAAA,OAAAA,QAAe,GAADC,OAAId,EAAOe,KAAKC,MAAQ,OAAM,mBAAkBf,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAgB,GAAAhB,EAAA,SAE9DY,EAAAA,OAAAA,QAAe,+BAA+B,QAEjC,OAFiCZ,EAAAC,KAAA,GAE9CH,EAAKmB,QAAQjB,EAAAkB,OAAA,6BAAAlB,EAAAmB,OAAA,GAAAvB,EAAA,wBAEhB,gBAlBiBwB,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAA,KAoBlB,OACEC,EAAAA,EAAAA,MAAC9C,EAAI,CAAC+C,SAAUhC,EAAciC,aAAa,MAAKC,SAAA,EAC9CH,EAAAA,EAAAA,MAAC1C,EAAK,CAAA6C,SAAA,CAAC,SAELC,EAAAA,EAAAA,KAAC5C,EAAK,CACJ6C,KAAK,QACLb,KAAK,QAELc,QAAQ,0EACRC,MAAM,oLACNC,UAAQ,EACRC,YAAY,yBAGhBT,EAAAA,EAAAA,MAAC1C,EAAK,CAAA6C,SAAA,CAAC,YAELC,EAAAA,EAAAA,KAAC5C,EAAK,CACJ6C,KAAK,WACLb,KAAK,WAGLc,QAAQ,uDACRC,MAAM,mIACNE,YAAY,sBACZD,UAAQ,QAGZJ,EAAAA,EAAAA,KAAC1C,EAAM,CAAC2C,KAAK,SAAQF,SAAC,YACtBC,EAAAA,EAAAA,KAACxC,EAAU,CAAC8C,GAAG,YAAWP,SAAC,kDAGjC,ECrDA,EAJc,WACZ,OAAOC,EAAAA,EAAAA,KAACO,EAAS,GACnB,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 500px;\n  width: 100%;\n  margin: 0 auto;\n  margin-top: 50px;\n  border: 1px solid #efefef;\n  background: linear-gradient(45deg, #FF6B6B, #3E8AC5);\n  padding: 20px;\n\n  /* Responsive design */\n  @media (max-width: 768px) {\n    max-width: 90%;\n    margin-top: 30px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 50px;\n  font-size: 1.2rem;\n  font-weight: 500;\n\n  /* Responsive design */\n  @media (max-width: 768px) {\n    font-size: 1rem;\n    margin-top: 30px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 15px 20px;\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border: 1px solid #efefef;\n  box-sizing: border-box;\n  font-size: 1rem;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  ::placeholder {\n    color: #757575;\n  }\n\n  :hover,\n  :focus {\n    border: 1px solid #000000;\n  }\n\n  /* Responsive design */\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 1rem;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 600;\n  font-size: 1.2rem;\n  margin-top: 20px;\n  margin-bottom: 5px;\n  padding: 15px 40px;\n  border: 1px solid black;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n              border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: white;\n    background-color: black;\n    border: 1px solid #000000;\n  }\n\n  /* Responsive design */\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 1rem;\n    padding: 12px 30px;\n  }\n`;\n\nexport const LoggedLink = styled(NavLink)`\n  margin: 10px 0;\n  color: black;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    color: white;\n  }\n\n  /* Responsive design */\n  @media (max-width: 768px) {\n    font-size: 1rem;\n  }\n`;\n\n\n\n// import styled from '@emotion/styled';\n// import { NavLink } from 'react-router-dom';\n\n// export const Form = styled.form`\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   justify-content: center;\n//   max-width: 500px;\n//   border: 1px solid #efefef;\n//   margin:0 auto;\n//   margin-top: 50px;\n//    background: linear-gradient(45deg, #FF6B6B, #3E8AC5);\n  \n// `;\n\n// export const Label = styled.label`\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n//   margin-top: 50px;\n//   font-size: 20px;\n//   font-weight: 500;\n// `;\n\n// export const Input = styled.input`\n//   width: 250px;\n//   padding: 25px 30px;\n//   color: #000000;\n//   // background: #efefef;\n//   // ckground-color: light-dark(rgb(232, 240, 254), rgba(70, 90, 126, 0.4));\n//   border-radius: 18px;\n//   border: 1px solid #efefef;\n//   ::placeholder {\n//     color: #757575;\n//   }\n// transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   :hover,\n//   :focus {\n//     border: 1px solid #000000;\n//   }\n// `;\n\n// export const Button = styled.button`\n//   font-weight: 600;\n//   font-size: 20px;\n//   margin-top: 20px;\n//   margin-bottom: 5px;\n//   padding: 15px 40px;\n//   // background-color: whitesmoke;\n//   border: 1px solid black;\n//   border-radius: 10px;\n//   cursor: pointer;\n//   transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n//   transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n//   :hover,\n//   :focus {\n//     color: white;\n//     background-color: black;\n//     border: 1px solid #000000;\n//   }\n// `;\n\n// export const LoggedLink = styled(NavLink)`\n//   margin: 10px 0;\n//   color: black;\n//   cursor: pointer;\n//   :hover,\n//   :focus {\n//     color: white;\n//   }\n// `;","import { Notify } from 'notiflix';\nimport { Form, Input, Label, Button, LoggedLink } from './LoginForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    try {\n      const result = await dispatch(\n        logIn({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).unwrap();\n      \n      Notify.success(`${result.user.name || 'User'} welcome back!`);\n    } catch (error) {\n      Notify.failure('Incorrect login or password');\n    } finally {\n      form.reset(); \n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Email\n        <Input\n          type=\"email\"\n          name=\"email\"\n          // pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\"\n          pattern=\"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\"\n          title=\"Email may contain letters, numbers, an apostrophe, and must be followed by '@' domain name '.' domain suffix. For example Taras@ukr.ua, adrian@gmail.com, JacobM3rcer@hotmail.com\"\n          required\n          placeholder=\"Enter your email\"\n        />\n      </Label>\n      <Label>\n        Password\n        <Input\n          type=\"password\"\n          name=\"password\"\n          // Updated, simplified pattern\n          // pattern=\"^(?=.*[A-Za-z])(?=.*\\d)(?=.*[!@#$%^&*()_+]).{8,}$\"\n          pattern=\"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[!@#$%^&*()_+]).{8,}$\"\n          title=\"Password must contain at least one letter, one number, one special character (e.g. !@#$%^&*), and be at least 8 characters long.\"\n          placeholder=\"Enter your password\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Log In</Button>\n      <LoggedLink to=\"/register\">You don't have an account? Please register.</LoggedLink>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","LoggedLink","NavLink","_templateObject5","dispatch","useDispatch","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","e","form","result","_context","prev","next","preventDefault","currentTarget","logIn","email","elements","value","password","unwrap","sent","Notify","concat","user","name","t0","reset","finish","stop","_x","apply","arguments","_jsxs","onSubmit","autoComplete","children","_jsx","type","pattern","title","required","placeholder","to","LoginForm"],"sourceRoot":""}